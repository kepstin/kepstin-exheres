# Copyright 2012 Calvin Walton <calvin.walton@kepstin.ca>
# Distributed under the terms of the GNU General Public License v2

require systemd-service udev-rules

SUMMARY="Network UPS Tools"
DESCRIPTION="
Network UPS Tools (NUT) is a client/server monitoring system that allows
computers to share uninterruptible power supply (UPS) and power distribution
unit (PDU) hardware. Clients access the hardware through the server, and are
notified whenever the power status changes.
"
HOMEPAGE="http://www.networkupstools.com/"
DOWNLOADS="http://www.networkupstools.org/source/2.6/nut-2.6.4.tar.gz"

LICENCES="GPL-2"
# Note: The Python library is GPL-3, and the Perl module is GPL-1+/Artistic
# Neither is currently installed.

SLOT="0"
PLATFORMS="~amd64"
MYOPTIONS="
    avahi [[ description = [ Scan for remote networked NUT UPSes ] ]]
    ssl [[ description = [ Encrypt and authenticate network UPS connections ] ]]
    systemd [[ description = [ Install unit files for systemd ] ]]
    tcpd
    nut_drivers:
        serial [[ description = [ serial (RS-232) UPS devices ] ]]
        usb [[ description = [ USB-connected UPS devices ] ]]
        snmp [[ description = [ UPS devices with SNMP interface ] ]]
        xml [[ description = [ UPS devices with XML/HTTP interface ] ]]
        powerman [[ description = [ Powerman PDU ] ]]
"
# Currently, the following features aren't enabled:
# ipmi driver - needs FreeIPMI (and not OpenIPMI...)
# cgi - web interface to NUT. Needs external web server and gd.
# Python and Perl libraries
# Compile html/pdf documentation

DEPENDENCIES="
    build:
        dev-util/pkg-config
    build+run:
        user/nut
        avahi? ( net-dns/avahi[>=0.6.30] )
        ssl? ( dev-libs/openssl )
        tcpd? ( sys-apps/tcp-wrappers )

        nut_drivers:usb? ( dev-libs/libusb:0.1 )
        nut_drivers:snmp? ( net/net-snmp )
        nut_drivers:xml? ( net-misc/neon[>=0.25.0] )
        nut_drivers:powerman? ( sys-power/powerman )
"

BUGS_TO=""

DEFAULT_SRC_CONFIGURE_PARAMS=(
    --sysconfdir=/etc/nut
    --datarootdir=/usr/share/nut
    --datadir=/usr/share/nut
    --htmldir=/usr/share/doc/${PNVR}/html

    --with-drvpath=/usr/sbin
    --with-statepath=/var/lib/nut
    --with-pidpath=/run/nut
    --with-altpidpath=/run/nut
    --with-udev-dir=${UDEVRULESDIR}
    --without-hotplug-dir

    --with-user=nut
    --with-group=nut

    --disable-static

    --with-dev
    --without-hal
    --without-ipmi
    --with-libltdl
    --without-doc
)
DEFAULT_SRC_CONFIGURE_OPTION_WITHS=(
    avahi
    "systemd systemdsystemunitdir ${SYSTEMDSYSTEMUNITDIR}"
    "tcpd wrap"
    nut_drivers:serial
    nut_drivers:usb
    nut_drivers:snmp
    "nut_drivers:xml neon"
    nut_drivers:powerman
)

src_install() {
    default

    DIROPTIONS="-o nut -g nut" dodir /var/lib/nut
    keepdir /var/lib/nut

    # Rename the 'sample' config files; config-protect will stop overwrites.
    for conf in ${IMAGE}/etc/nut/*.sample; do
        edo mv $conf ${IMAGE}/etc/nut/$(basename $conf .sample)
    done

    if option systemd; then
        # Workaround the hardcoded install path for the system-shutdown script
        edo mv ${IMAGE}/lib/systemd/system-shutdown \
               ${IMAGE}/$(dirname ${SYSTEMDSYSTEMUNITDIR})
        edo rmdir ${IMAGE}/lib/systemd \
                  ${IMAGE}/lib

        # Automatically create the /run/nut directory
        insinto /etc/tmpfiles.d
        doins $FILES/tmpfiles.d/nut.conf
    else
        elog "Please ensure that your init scripts create a /run/nut directory"
        elog "owned by the 'nut' user before starting nut."
    fi

    # The man1 directory is only used if pkg-config is disabled, and we have it
    # hard-enabled.
    edo rmdir ${IMAGE}/usr/share/man/man1

    # Installs empty html directory if docs are disabled
    edo rmdir ${IMAGE}/usr/html

    # Installs empty cgi-bin directory if cgi is disabled
    edo rmdir ${IMAGE}/usr/cgi-bin
}
